git 命令使用：
git add . //添加本地所有修改的文件--本地暂存区 indexDB

git commit -m '/**注释**/' //添加文件到本地仓库区，这个注解必须加--repositoryDB

git push //提交到远程git仓库--remoteDB


............查看修改和提交的信息...........

git diff //查看文件的修改内容

gig log //查看文件的修改提交日志

----------回滚提交的内容-----------

git reset --hard <版本号> //这个版本号必须写，可以通过git log 查看到版本号commit:68383a...,对应前四位的内容。

cat <文件名> //查看文件的内容

git reflog //记录提交过的命令历史，关闭了后再打开任然可以看见。

------------撤销修改-------------------

撤销修改分为三种情况：

1.工作区的文件修改
   git checkout -- <文件> //直接撤销本地工作区的修改。注意文件的前面必须要有空格。

2.暂存区的文件修改，(gti add .)
   
   i.已经是通过 git add <文件> 将修改的文件添加到缓存区的文件撤销，分为两步走。
    a.git reset HEAD <文件>
    b.git checkout -- <文件> //文件要与a重置的文件相同。

   ii. 一种特殊情况：
     对同一个文件修改了两次，第一次修改add .,第二次在进行修改，这个时候要回滚到最初的状态。
     a.git reset HEAD <文件>
     b.git checkout -- <文件> //把第一次add的文件撤销
     c.git checkout -- <文件> //把第二次修改的撤销。回滚到最初的状态。

3.commit操作了的文件撤销修改


----------------分支--------------------------
 git checkout -b <分支名> //-b表示创建并且切换到当前这个分支上、

 git branch //查看所有分支，当前分支前面会有一个*；

 git checkout <分支名> //切换到其他分支

 git merge <分支> //把<分支>的内容合并到当前分支，合并分支后只是把其他分支的代码放到了暂存区，要同步到远端分支的话还需要push。

 git branch -d <分支> //删除分支

 git branch --set-upstream-to=origin/<分支> dev //当前分支跟踪到其他分支，一般是跟踪到master主分支，在其他分可以更新master上分支的代码。

-----------------解决冲突-----------------------


